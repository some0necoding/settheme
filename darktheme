#!/bin/bash
#
#		--------------- darktheme ---------------
#
#		This script can be used both to manually
#		set kde desktop theme to breeze dark or 
#		to specify the time when it will be set
#		automatically.
#


CMD_NAME="darktheme"
#TIMINGS="/home/${USER}/.local/share/settheme/timings"
DARKTHEME_TIMER="/home/${USER}/.config/systemd/user/darktheme.timer"
LIGHTTHEME_TIMER="/home/${USER}/.config/systemd/user/lighttheme.timer"


# mkfile creates a file and all parent directories.
mkfile() {

	filename=$(basename $TIMINGS)
	folder=${1%$filename}

	mkdir -p "$folder"
	touch "$1"
}


# If no arguments are provided the theme is changed to breeze dark. TODO: move org.kde.breezedark.desktop into a variable inside a config file and make it editable using this command
[[ -z $1 ]] && { lookandfeeltool -a 'org.kde.breezedark.desktop' &> /dev/null; exit 0; }

# If argument set is provided, dark theme activation time is set.
[[ -n $1 && -n $2 ]] && {

	# Check argument
	[[ $1 == "set" ]] || { echo "invalid command: $1"; exit 0; }

	# Check good date format
	[[ $2 =~ ^[0-9]{2}:[0-9]{2}:[0-9]{2}$ ]] || { echo "$2 is not a valid date format. Use instead HH:MM:SS"; exit 0; }

	# Check if date is valid
	[[ $2 =~ ^([01][0-9]|[2][0-3]):[0-5][0-9]:[0-5][0-9]$ ]] || { echo "Date not valid. It can range from 00:00:00 to 23:59:59"; exit 0; }

	# Check if timings file exists. If not, create it.
	[[ -e $TIMINGS ]] || mkfile $TIMINGS

	# Convert date in HH:MM:SS format into seconds
	time=$(date -d"$2" +%s)

	# If inserted date is equal to lighttheme date, throw an error
	[[ $time != $L_TIME ]] || { echo "darktheme activation time cannot be the same as lighttheme"; exit 0; }

	# If D_TIME line is not present add it, otherwise
	# replace the existing one with the new one.
	[[ $(grep -E "D_TIME=[0-9]*" $TIMINGS) ]] && sed -i 's/D_TIME=[0-9]*/D_TIME=${time}/' $TIMINGS || echo "D_TIME=${time}" >> $TIMINGS

	# TODO: set time also for systemd units

	echo "dark theme activation time successfully set to $2!"

}
